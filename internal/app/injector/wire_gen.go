// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package injector

import (
	"github.com/peanut-pg/gin_admin/internal/app/api"
	"github.com/peanut-pg/gin_admin/internal/app/bll/impl/bll"
	"github.com/peanut-pg/gin_admin/internal/app/model/impl/gorm/model"
	"github.com/peanut-pg/gin_admin/internal/app/router"
)

// Injectors from wire.go:

func BuildInjector() (*Injector, func(), error) {
	auther, cleanup, err := InitAuth()
	if err != nil {
		return nil, nil, err
	}
	db, cleanup2, err := InitGormDB()
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	trans := &model.Trans{
		DB: db,
	}
	user := &model.User{
		DB: db,
	}
	userRole := &model.UserRole{
		DB: db,
	}
	role := &model.Role{
		DB: db,
	}
	bllUser := &bll.User{
		TransModel:    trans,
		UserModel:     user,
		UserRoleModel: userRole,
		RoleModel:     role,
	}
	apiUser := &api.User{
		UserBll: bllUser,
	}
	routerRouter := &router.Router{
		Auth:    auther,
		UserAPI: apiUser,
	}
	engine := InitGinEngine(routerRouter)
	injector := &Injector{
		Engine: engine,
		Auth:   auther,
	}
	return injector, func() {
		cleanup2()
		cleanup()
	}, nil
}
